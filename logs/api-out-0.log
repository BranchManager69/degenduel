2025-01-25 00:00:19 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:00:19.177Z"}
2025-01-25 00:00:29 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:00:29.378Z"}
2025-01-25 00:00:29 -05:00: [32minfo[39m: User authenticated: BPuRhkeCkor7DxMrcPVsB4AdW6Pmp5oACjVzpPb72Mhp (role=superadmin) {"timestamp":"2025-01-25T05:00:29.380Z"}
2025-01-25 00:00:29 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:00:29.380Z"}
2025-01-25 00:00:29 -05:00: [32minfo[39m: User authenticated: BPuRhkeCkor7DxMrcPVsB4AdW6Pmp5oACjVzpPb72Mhp (role=superadmin) {"timestamp":"2025-01-25T05:00:29.477Z"}
2025-01-25 00:00:29 -05:00: [32minfo[39m: User authenticated: BPuRhkeCkor7DxMrcPVsB4AdW6Pmp5oACjVzpPb72Mhp (role=superadmin) {"timestamp":"2025-01-25T05:00:29.880Z"}
2025-01-25 00:00:29 -05:00: [32minfo[39m: User authenticated: BPuRhkeCkor7DxMrcPVsB4AdW6Pmp5oACjVzpPb72Mhp (role=superadmin) {"timestamp":"2025-01-25T05:00:29.975Z"}
2025-01-25 00:00:29 -05:00: [32minfo[39m: User authenticated: BPuRhkeCkor7DxMrcPVsB4AdW6Pmp5oACjVzpPb72Mhp (role=superadmin) {"timestamp":"2025-01-25T05:00:29.976Z"}
2025-01-25 00:00:30 -05:00: [32minfo[39m: User authenticated: BPuRhkeCkor7DxMrcPVsB4AdW6Pmp5oACjVzpPb72Mhp (role=superadmin) {"timestamp":"2025-01-25T05:00:30.178Z"}
2025-01-25 00:00:30 -05:00: [32minfo[39m: User authenticated: BPuRhkeCkor7DxMrcPVsB4AdW6Pmp5oACjVzpPb72Mhp (role=superadmin) {"timestamp":"2025-01-25T05:00:30.179Z"}
2025-01-25 00:00:30 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:00:30.375Z"}
2025-01-25 00:00:30 -05:00: [32minfo[39m: User authenticated: BPuRhkeCkor7DxMrcPVsB4AdW6Pmp5oACjVzpPb72Mhp (role=superadmin) {"timestamp":"2025-01-25T05:00:30.377Z"}
2025-01-25 00:00:30 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:00:30.378Z"}
2025-01-25 00:00:30 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:00:30.379Z"}
2025-01-25 00:00:30 -05:00: [32minfo[39m: User authenticated: BPuRhkeCkor7DxMrcPVsB4AdW6Pmp5oACjVzpPb72Mhp (role=superadmin) {"timestamp":"2025-01-25T05:00:30.380Z"}
2025-01-25 00:00:30 -05:00: [32minfo[39m: User authenticated: BPuRhkeCkor7DxMrcPVsB4AdW6Pmp5oACjVzpPb72Mhp (role=superadmin) {"timestamp":"2025-01-25T05:00:30.381Z"}
2025-01-25 00:01:19 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:01:19.175Z"}
2025-01-25 00:02:19 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:02:19.477Z"}
2025-01-25 00:02:42 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:02:42.077Z"}
2025-01-25 00:02:42 -05:00: [32minfo[39m: User authenticated: BPuRhkeCkor7DxMrcPVsB4AdW6Pmp5oACjVzpPb72Mhp (role=superadmin) {"timestamp":"2025-01-25T05:02:42.079Z"}
2025-01-25 00:02:42 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:02:42.176Z"}
2025-01-25 00:02:42 -05:00: [32minfo[39m: User authenticated: BPuRhkeCkor7DxMrcPVsB4AdW6Pmp5oACjVzpPb72Mhp (role=superadmin) {"timestamp":"2025-01-25T05:02:42.178Z"}
2025-01-25 00:02:42 -05:00: [32minfo[39m: User authenticated: BPuRhkeCkor7DxMrcPVsB4AdW6Pmp5oACjVzpPb72Mhp (role=superadmin) {"timestamp":"2025-01-25T05:02:42.275Z"}
2025-01-25 00:02:42 -05:00: [32minfo[39m: User authenticated: BPuRhkeCkor7DxMrcPVsB4AdW6Pmp5oACjVzpPb72Mhp (role=superadmin) {"timestamp":"2025-01-25T05:02:42.778Z"}
2025-01-25 00:02:42 -05:00: [32minfo[39m: User authenticated: BPuRhkeCkor7DxMrcPVsB4AdW6Pmp5oACjVzpPb72Mhp (role=superadmin) {"timestamp":"2025-01-25T05:02:42.778Z"}
2025-01-25 00:02:43 -05:00: [32minfo[39m: User authenticated: BPuRhkeCkor7DxMrcPVsB4AdW6Pmp5oACjVzpPb72Mhp (role=superadmin) {"timestamp":"2025-01-25T05:02:43.075Z"}
2025-01-25 00:02:43 -05:00: [32minfo[39m: User authenticated: BPuRhkeCkor7DxMrcPVsB4AdW6Pmp5oACjVzpPb72Mhp (role=superadmin) {"timestamp":"2025-01-25T05:02:43.079Z"}
2025-01-25 00:02:43 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:02:43.373Z"}
2025-01-25 00:02:43 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:02:43.375Z"}
2025-01-25 00:02:43 -05:00: [32minfo[39m: User authenticated: BPuRhkeCkor7DxMrcPVsB4AdW6Pmp5oACjVzpPb72Mhp (role=superadmin) {"timestamp":"2025-01-25T05:02:43.377Z"}
2025-01-25 00:02:43 -05:00: [32minfo[39m: User authenticated: BPuRhkeCkor7DxMrcPVsB4AdW6Pmp5oACjVzpPb72Mhp (role=superadmin) {"timestamp":"2025-01-25T05:02:43.377Z"}
2025-01-25 00:02:43 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:02:43.377Z"}
2025-01-25 00:02:43 -05:00: [32minfo[39m: User authenticated: BPuRhkeCkor7DxMrcPVsB4AdW6Pmp5oACjVzpPb72Mhp (role=superadmin) {"timestamp":"2025-01-25T05:02:43.379Z"}
2025-01-25 00:03:19 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:03:19.274Z"}
2025-01-25 00:04:19 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:04:19.176Z"}
2025-01-25 00:05:19 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:05:19.074Z"}
2025-01-25 00:06:19 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:06:19.172Z"}
2025-01-25 00:07:19 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:07:19.076Z"}
2025-01-25 00:08:19 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:08:19.170Z"}
2025-01-25 00:09:19 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:09:19.168Z"}
2025-01-25 00:10:19 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:10:19.368Z"}
2025-01-25 00:11:19 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:11:19.167Z"}
2025-01-25 00:12:19 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:12:19.166Z"}
2025-01-25 00:13:19 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:13:19.165Z"}
2025-01-25 00:15:19 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:15:19.065Z"}
2025-01-25 00:16:19 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:16:19.065Z"}
2025-01-25 00:17:19 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:17:19.164Z"}
2025-01-25 00:18:19 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:18:19.163Z"}
2025-01-25 00:19:19 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:19:19.163Z"}
2025-01-25 00:20:18 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:20:18.970Z"}
2025-01-25 00:21:19 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:21:19.162Z"}
2025-01-25 00:22:19 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:22:19.068Z"}
2025-01-25 00:23:19 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:23:19.064Z"}
2025-01-25 00:24:19 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:24:19.061Z"}
2025-01-25 00:25:19 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:25:19.063Z"}
2025-01-25 00:26:19 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:26:19.162Z"}
2025-01-25 00:27:19 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:27:19.068Z"}
2025-01-25 00:28:19 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:28:19.159Z"}
2025-01-25 00:29:19 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:29:19.161Z"}
2025-01-25 00:30:18 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:30:18.961Z"}
2025-01-25 00:31:18 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:31:18.962Z"}
2025-01-25 00:32:18 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:32:18.959Z"}
2025-01-25 00:33:19 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:33:19.059Z"}
2025-01-25 00:34:19 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:34:19.057Z"}
2025-01-25 00:35:19 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T05:35:19.160Z"}
2025-01-25 00:35:37 -05:00: [32minfo[39m: PostgreSQL database connection closed {"timestamp":"2025-01-25T05:35:37.362Z"}
2025-01-25 01:02:21 -05:00: Initializing Swagger with single route file...
2025-01-25 01:02:21 -05:00: Successfully loaded routes: [
  '/api/buckets',
  '/api/buckets/{id}',
  '/api/token-buckets/{bucketId}/tokens',
  '/api/token-buckets/{bucketId}/tokens/{tokenId}',
  '/api/token-buckets/{bucketId}',
  '/api/auth/challenge',
  '/api/auth/verify-wallet',
  '/api/auth/disconnect',
  '/api/auth/logout',
  '/api/auth/session',
  '/api/users',
  '/api/users/{wallet}',
  '/api/users/{wallet}/achievements',
  '/api/users/{wallet}/stats'
]
2025-01-25 01:02:21 -05:00: Available operations: [
  '/api/buckets: post, get',
  '/api/buckets/{id}: get',
  '/api/token-buckets/{bucketId}/tokens: post',
  '/api/token-buckets/{bucketId}/tokens/{tokenId}: delete',
  '/api/token-buckets/{bucketId}: patch, delete',
  '/api/auth/challenge: get',
  '/api/auth/verify-wallet: post',
  '/api/auth/disconnect: post',
  '/api/auth/logout: post',
  '/api/auth/session: get',
  '/api/users: get, post',
  '/api/users/{wallet}: get, put',
  '/api/users/{wallet}/achievements: get',
  '/api/users/{wallet}/stats: get'
]
2025-01-25 01:02:23 -05:00: Swagger docs available at /api-docs
2025-01-25 01:02:23 -05:00: 

2025-01-25 01:02:23 -05:00: 	   🤺  DegenDuel API  		|  INITIALIZING...
2025-01-25 01:02:23 -05:00: [32minfo[39m: Initializing PostgreSQL database... {"timestamp":"2025-01-25T06:02:23.479Z"}
2025-01-25 01:02:23 -05:00: [32minfo[39m: Starting DegenDuel API... {"port":"3003","timestamp":"2025-01-25T06:02:23.580Z"}
2025-01-25 01:02:23 -05:00: [32minfo[39m: Database initialized successfully at /home/websites/degenduel/data/leaderboard.db {"timestamp":"2025-01-25T06:02:23.677Z"}
2025-01-25 01:02:24 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T06:02:24.382Z"}
2025-01-25 01:02:24 -05:00: [32minfo[39m: Database schema already exists, skipping initialization {"timestamp":"2025-01-25T06:02:24.574Z"}
2025-01-25 01:02:24 -05:00: [32minfo[39m: PostgreSQL database initialized successfully {"timestamp":"2025-01-25T06:02:24.575Z"}
2025-01-25 01:02:24 -05:00: 	   ⚔️   DegenDuel API  		|  ALMOST THERE...
2025-01-25 01:02:24 -05:00: 	   🎯  DegenDuel API  		|  READY!
2025-01-25 01:02:24 -05:00: 	     '--------------> Port 3003 (all interfaces)
2025-01-25 01:02:45 -05:00: [31merror[39m: Failed to fetch global rankings: 
Invalid `prisma.users.findMany()` invocation:

{
  select: {
    wallet_address: true,
    nickname: true,
    rank_score: true,
    highest_rank_score: true,
    ~~~~~~~~~~~~~~~~~~
    total_contests: true,
    total_earnings: true,
    contest_participants: {
      select: {
        final_rank: true
      },
      where: {
        contest: {
          status: "COMPLETED"
        }
      }
    },
?   created_at?: true,
?   last_login?: true,
?   role?: true,
?   total_wins?: true,
?   settings?: true,
?   balance?: true,
?   is_banned?: true,
?   ban_reason?: true,
?   last_deposit_at?: true,
?   last_withdrawal_at?: true,
?   kyc_status?: true,
?   risk_level?: true,
?   updated_at?: true,
?   user_stats?: true,
?   contest_portfolios?: true,
?   contest_token_performance?: true,
?   contest_token_prices?: true,
?   influences?: true,
?   transactions?: true,
?   _count?: true
  },
  where: {
    rank_score: {
      not: null
    }
  },
  orderBy: {
    rank_score: "desc"
  },
  take: 5,
  skip: 0
}

Unknown field `highest_rank_score` for select statement on model `users`. Available options are marked with ?. {"clientVersion":"6.1.0","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    wallet_address: true,\n    nickname: true,\n    rank_score: true,\n    highest_rank_score: true,\n    ~~~~~~~~~~~~~~~~~~\n    total_contests: true,\n    total_earnings: true,\n    contest_participants: {\n      select: {\n        final_rank: true\n      },\n      where: {\n        contest: {\n          status: \"COMPLETED\"\n        }\n      }\n    },\n?   created_at?: true,\n?   last_login?: true,\n?   role?: true,\n?   total_wins?: true,\n?   settings?: true,\n?   balance?: true,\n?   is_banned?: true,\n?   ban_reason?: true,\n?   last_deposit_at?: true,\n?   last_withdrawal_at?: true,\n?   kyc_status?: true,\n?   risk_level?: true,\n?   updated_at?: true,\n?   user_stats?: true,\n?   contest_portfolios?: true,\n?   contest_token_performance?: true,\n?   contest_token_prices?: true,\n?   influences?: true,\n?   transactions?: true,\n?   _count?: true\n  },\n  where: {\n    rank_score: {\n      not: null\n    }\n  },\n  orderBy: {\n    rank_score: \"desc\"\n  },\n  take: 5,\n  skip: 0\n}\n\nUnknown field `highest_rank_score` for select statement on model `users`. Available options are marked with ?.\n    at wn (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at qn.handleRequestError (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6958)\n    at qn.handleAndLogRequestError (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6640)\n    at qn.request (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6347)\n    at async l (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:130:9616)\n    at async file:///home/websites/degenduel/routes/prisma/leaderboard.js:96:22","timestamp":"2025-01-25T06:02:45.677Z"}
2025-01-25 01:03:26 -05:00: [31merror[39m: Failed to fetch global rankings: 
Invalid `prisma.users.findMany()` invocation:

{
  select: {
    wallet_address: true,
    nickname: true,
    rank_score: true,
    highest_rank_score: true,
    ~~~~~~~~~~~~~~~~~~
    total_contests: true,
    total_earnings: true,
    contest_participants: {
      select: {
        final_rank: true
      },
      where: {
        contest: {
          status: "COMPLETED"
        }
      }
    },
?   created_at?: true,
?   last_login?: true,
?   role?: true,
?   total_wins?: true,
?   settings?: true,
?   balance?: true,
?   is_banned?: true,
?   ban_reason?: true,
?   last_deposit_at?: true,
?   last_withdrawal_at?: true,
?   kyc_status?: true,
?   risk_level?: true,
?   updated_at?: true,
?   user_stats?: true,
?   contest_portfolios?: true,
?   contest_token_performance?: true,
?   contest_token_prices?: true,
?   influences?: true,
?   transactions?: true,
?   _count?: true
  },
  where: {
    rank_score: {
      not: null
    }
  },
  orderBy: {
    rank_score: "desc"
  },
  take: 5,
  skip: 0
}

Unknown field `highest_rank_score` for select statement on model `users`. Available options are marked with ?. {"clientVersion":"6.1.0","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    wallet_address: true,\n    nickname: true,\n    rank_score: true,\n    highest_rank_score: true,\n    ~~~~~~~~~~~~~~~~~~\n    total_contests: true,\n    total_earnings: true,\n    contest_participants: {\n      select: {\n        final_rank: true\n      },\n      where: {\n        contest: {\n          status: \"COMPLETED\"\n        }\n      }\n    },\n?   created_at?: true,\n?   last_login?: true,\n?   role?: true,\n?   total_wins?: true,\n?   settings?: true,\n?   balance?: true,\n?   is_banned?: true,\n?   ban_reason?: true,\n?   last_deposit_at?: true,\n?   last_withdrawal_at?: true,\n?   kyc_status?: true,\n?   risk_level?: true,\n?   updated_at?: true,\n?   user_stats?: true,\n?   contest_portfolios?: true,\n?   contest_token_performance?: true,\n?   contest_token_prices?: true,\n?   influences?: true,\n?   transactions?: true,\n?   _count?: true\n  },\n  where: {\n    rank_score: {\n      not: null\n    }\n  },\n  orderBy: {\n    rank_score: \"desc\"\n  },\n  take: 5,\n  skip: 0\n}\n\nUnknown field `highest_rank_score` for select statement on model `users`. Available options are marked with ?.\n    at wn (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at qn.handleRequestError (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6958)\n    at qn.handleAndLogRequestError (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6640)\n    at qn.request (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6347)\n    at async l (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:130:9616)\n    at async file:///home/websites/degenduel/routes/prisma/leaderboard.js:96:22","timestamp":"2025-01-25T06:03:26.674Z"}
2025-01-25 01:04:18 -05:00: [32minfo[39m: PostgreSQL database connection closed {"timestamp":"2025-01-25T06:04:18.979Z"}
2025-01-25 01:04:27 -05:00: Initializing Swagger with single route file...
2025-01-25 01:04:28 -05:00: Successfully loaded routes: [
  '/api/buckets',
  '/api/buckets/{id}',
  '/api/token-buckets/{bucketId}/tokens',
  '/api/token-buckets/{bucketId}/tokens/{tokenId}',
  '/api/token-buckets/{bucketId}',
  '/api/auth/challenge',
  '/api/auth/verify-wallet',
  '/api/auth/disconnect',
  '/api/auth/logout',
  '/api/auth/session',
  '/api/users',
  '/api/users/{wallet}',
  '/api/users/{wallet}/achievements',
  '/api/users/{wallet}/stats'
]
2025-01-25 01:04:28 -05:00: Available operations: [
  '/api/buckets: post, get',
  '/api/buckets/{id}: get',
  '/api/token-buckets/{bucketId}/tokens: post',
  '/api/token-buckets/{bucketId}/tokens/{tokenId}: delete',
  '/api/token-buckets/{bucketId}: patch, delete',
  '/api/auth/challenge: get',
  '/api/auth/verify-wallet: post',
  '/api/auth/disconnect: post',
  '/api/auth/logout: post',
  '/api/auth/session: get',
  '/api/users: get, post',
  '/api/users/{wallet}: get, put',
  '/api/users/{wallet}/achievements: get',
  '/api/users/{wallet}/stats: get'
]
2025-01-25 01:04:29 -05:00: Swagger docs available at /api-docs
2025-01-25 01:04:29 -05:00: 

2025-01-25 01:04:29 -05:00: 	   🤺  DegenDuel API  		|  INITIALIZING...
2025-01-25 01:04:29 -05:00: [32minfo[39m: Initializing PostgreSQL database... {"timestamp":"2025-01-25T06:04:29.678Z"}
2025-01-25 01:04:29 -05:00: [32minfo[39m: Starting DegenDuel API... {"port":"3003","timestamp":"2025-01-25T06:04:29.782Z"}
2025-01-25 01:04:29 -05:00: [32minfo[39m: Database initialized successfully at /home/websites/degenduel/data/leaderboard.db {"timestamp":"2025-01-25T06:04:29.878Z"}
2025-01-25 01:04:30 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T06:04:30.776Z"}
2025-01-25 01:04:30 -05:00: [32minfo[39m: Database schema already exists, skipping initialization {"timestamp":"2025-01-25T06:04:30.878Z"}
2025-01-25 01:04:30 -05:00: [32minfo[39m: PostgreSQL database initialized successfully {"timestamp":"2025-01-25T06:04:30.879Z"}
2025-01-25 01:04:30 -05:00: 	   ⚔️   DegenDuel API  		|  ALMOST THERE...
2025-01-25 01:04:30 -05:00: 	   🎯  DegenDuel API  		|  READY!
2025-01-25 01:04:30 -05:00: 	     '--------------> Port 3003 (all interfaces)
2025-01-25 01:04:44 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T06:04:44.180Z"}
2025-01-25 01:11:35 -05:00: [32minfo[39m: PostgreSQL database connection closed {"timestamp":"2025-01-25T06:11:35.171Z"}
2025-01-25 01:11:41 -05:00: Initializing Swagger with single route file...
2025-01-25 01:11:42 -05:00: Successfully loaded routes: [
  '/api/buckets',
  '/api/buckets/{id}',
  '/api/token-buckets/{bucketId}/tokens',
  '/api/token-buckets/{bucketId}/tokens/{tokenId}',
  '/api/token-buckets/{bucketId}',
  '/api/auth/challenge',
  '/api/auth/verify-wallet',
  '/api/auth/disconnect',
  '/api/auth/logout',
  '/api/auth/session',
  '/api/users',
  '/api/users/{wallet}',
  '/api/users/{wallet}/achievements',
  '/api/users/{wallet}/stats'
]
2025-01-25 01:11:42 -05:00: Available operations: [
  '/api/buckets: post, get',
  '/api/buckets/{id}: get',
  '/api/token-buckets/{bucketId}/tokens: post',
  '/api/token-buckets/{bucketId}/tokens/{tokenId}: delete',
  '/api/token-buckets/{bucketId}: patch, delete',
  '/api/auth/challenge: get',
  '/api/auth/verify-wallet: post',
  '/api/auth/disconnect: post',
  '/api/auth/logout: post',
  '/api/auth/session: get',
  '/api/users: get, post',
  '/api/users/{wallet}: get, put',
  '/api/users/{wallet}/achievements: get',
  '/api/users/{wallet}/stats: get'
]
2025-01-25 01:11:43 -05:00: Swagger docs available at /api-docs
2025-01-25 01:11:43 -05:00: 

2025-01-25 01:11:43 -05:00: 	   🤺  DegenDuel API  		|  INITIALIZING...
2025-01-25 01:11:43 -05:00: [32minfo[39m: Initializing PostgreSQL database... {"timestamp":"2025-01-25T06:11:43.476Z"}
2025-01-25 01:11:43 -05:00: [32minfo[39m: Starting DegenDuel API... {"port":"3003","timestamp":"2025-01-25T06:11:43.673Z"}
2025-01-25 01:11:43 -05:00: [32minfo[39m: Database initialized successfully at /home/websites/degenduel/data/leaderboard.db {"timestamp":"2025-01-25T06:11:43.875Z"}
2025-01-25 01:11:44 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T06:11:44.670Z"}
2025-01-25 01:11:44 -05:00: [32minfo[39m: Database schema already exists, skipping initialization {"timestamp":"2025-01-25T06:11:44.676Z"}
2025-01-25 01:11:44 -05:00: [32minfo[39m: PostgreSQL database initialized successfully {"timestamp":"2025-01-25T06:11:44.677Z"}
2025-01-25 01:11:44 -05:00: 	   ⚔️   DegenDuel API  		|  ALMOST THERE...
2025-01-25 01:11:44 -05:00: 	   🎯  DegenDuel API  		|  READY!
2025-01-25 01:11:44 -05:00: 	     '--------------> Port 3003 (all interfaces)
2025-01-25 01:12:46 -05:00: [32minfo[39m: PostgreSQL database connection closed {"timestamp":"2025-01-25T06:12:46.068Z"}
2025-01-25 01:12:52 -05:00: Initializing Swagger with single route file...
2025-01-25 01:12:53 -05:00: Successfully loaded routes: [
  '/api/buckets',
  '/api/buckets/{id}',
  '/api/token-buckets/{bucketId}/tokens',
  '/api/token-buckets/{bucketId}/tokens/{tokenId}',
  '/api/token-buckets/{bucketId}',
  '/api/auth/challenge',
  '/api/auth/verify-wallet',
  '/api/auth/disconnect',
  '/api/auth/logout',
  '/api/auth/session',
  '/api/users',
  '/api/users/{wallet}',
  '/api/users/{wallet}/achievements',
  '/api/users/{wallet}/stats'
]
2025-01-25 01:12:53 -05:00: Available operations: [
  '/api/buckets: post, get',
  '/api/buckets/{id}: get',
  '/api/token-buckets/{bucketId}/tokens: post',
  '/api/token-buckets/{bucketId}/tokens/{tokenId}: delete',
  '/api/token-buckets/{bucketId}: patch, delete',
  '/api/auth/challenge: get',
  '/api/auth/verify-wallet: post',
  '/api/auth/disconnect: post',
  '/api/auth/logout: post',
  '/api/auth/session: get',
  '/api/users: get, post',
  '/api/users/{wallet}: get, put',
  '/api/users/{wallet}/achievements: get',
  '/api/users/{wallet}/stats: get'
]
2025-01-25 01:12:54 -05:00: Swagger docs available at /api-docs
2025-01-25 01:12:54 -05:00: 

2025-01-25 01:12:54 -05:00: 	   🤺  DegenDuel API  		|  INITIALIZING...
2025-01-25 01:12:54 -05:00: [32minfo[39m: Initializing PostgreSQL database... {"timestamp":"2025-01-25T06:12:54.572Z"}
2025-01-25 01:12:54 -05:00: [32minfo[39m: Starting DegenDuel API... {"port":"3003","timestamp":"2025-01-25T06:12:54.766Z"}
2025-01-25 01:12:54 -05:00: [32minfo[39m: Database initialized successfully at /home/websites/degenduel/data/leaderboard.db {"timestamp":"2025-01-25T06:12:54.772Z"}
2025-01-25 01:12:55 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T06:12:55.373Z"}
2025-01-25 01:12:55 -05:00: [32minfo[39m: Database schema already exists, skipping initialization {"timestamp":"2025-01-25T06:12:55.473Z"}
2025-01-25 01:12:55 -05:00: [32minfo[39m: PostgreSQL database initialized successfully {"timestamp":"2025-01-25T06:12:55.474Z"}
2025-01-25 01:12:55 -05:00: 	   ⚔️   DegenDuel API  		|  ALMOST THERE...
2025-01-25 01:12:55 -05:00: 	   🎯  DegenDuel API  		|  READY!
2025-01-25 01:12:55 -05:00: 	     '--------------> Port 3003 (all interfaces)
2025-01-25 01:13:28 -05:00: [32minfo[39m: PostgreSQL database connection closed {"timestamp":"2025-01-25T06:13:28.566Z"}
2025-01-25 01:13:35 -05:00: Initializing Swagger with single route file...
2025-01-25 01:13:36 -05:00: Successfully loaded routes: [
  '/api/buckets',
  '/api/buckets/{id}',
  '/api/token-buckets/{bucketId}/tokens',
  '/api/token-buckets/{bucketId}/tokens/{tokenId}',
  '/api/token-buckets/{bucketId}',
  '/api/auth/challenge',
  '/api/auth/verify-wallet',
  '/api/auth/disconnect',
  '/api/auth/logout',
  '/api/auth/session',
  '/api/users',
  '/api/users/{wallet}',
  '/api/users/{wallet}/achievements',
  '/api/users/{wallet}/stats'
]
2025-01-25 01:13:36 -05:00: Available operations: [
  '/api/buckets: post, get',
  '/api/buckets/{id}: get',
  '/api/token-buckets/{bucketId}/tokens: post',
  '/api/token-buckets/{bucketId}/tokens/{tokenId}: delete',
  '/api/token-buckets/{bucketId}: patch, delete',
  '/api/auth/challenge: get',
  '/api/auth/verify-wallet: post',
  '/api/auth/disconnect: post',
  '/api/auth/logout: post',
  '/api/auth/session: get',
  '/api/users: get, post',
  '/api/users/{wallet}: get, put',
  '/api/users/{wallet}/achievements: get',
  '/api/users/{wallet}/stats: get'
]
2025-01-25 01:13:37 -05:00: Swagger docs available at /api-docs
2025-01-25 01:13:37 -05:00: 

2025-01-25 01:13:37 -05:00: 	   🤺  DegenDuel API  		|  INITIALIZING...
2025-01-25 01:13:37 -05:00: [32minfo[39m: Initializing PostgreSQL database... {"timestamp":"2025-01-25T06:13:37.670Z"}
2025-01-25 01:13:37 -05:00: [32minfo[39m: Starting DegenDuel API... {"port":"3003","timestamp":"2025-01-25T06:13:37.773Z"}
2025-01-25 01:13:37 -05:00: [32minfo[39m: Database initialized successfully at /home/websites/degenduel/data/leaderboard.db {"timestamp":"2025-01-25T06:13:37.966Z"}
2025-01-25 01:13:38 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T06:13:38.665Z"}
2025-01-25 01:13:38 -05:00: [32minfo[39m: Database schema already exists, skipping initialization {"timestamp":"2025-01-25T06:13:38.671Z"}
2025-01-25 01:13:38 -05:00: [32minfo[39m: PostgreSQL database initialized successfully {"timestamp":"2025-01-25T06:13:38.671Z"}
2025-01-25 01:13:38 -05:00: 	   ⚔️   DegenDuel API  		|  ALMOST THERE...
2025-01-25 01:13:38 -05:00: 	   🎯  DegenDuel API  		|  READY!
2025-01-25 01:13:38 -05:00: 	     '--------------> Port 3003 (all interfaces)
2025-01-25 01:14:10 -05:00: [32minfo[39m: PostgreSQL database connection closed {"timestamp":"2025-01-25T06:14:10.171Z"}
2025-01-25 01:14:17 -05:00: Initializing Swagger with single route file...
2025-01-25 01:14:17 -05:00: Successfully loaded routes: [
  '/api/buckets',
  '/api/buckets/{id}',
  '/api/token-buckets/{bucketId}/tokens',
  '/api/token-buckets/{bucketId}/tokens/{tokenId}',
  '/api/token-buckets/{bucketId}',
  '/api/auth/challenge',
  '/api/auth/verify-wallet',
  '/api/auth/disconnect',
  '/api/auth/logout',
  '/api/auth/session',
  '/api/users',
  '/api/users/{wallet}',
  '/api/users/{wallet}/achievements',
  '/api/users/{wallet}/stats'
]
2025-01-25 01:14:17 -05:00: Available operations: [
  '/api/buckets: post, get',
  '/api/buckets/{id}: get',
  '/api/token-buckets/{bucketId}/tokens: post',
  '/api/token-buckets/{bucketId}/tokens/{tokenId}: delete',
  '/api/token-buckets/{bucketId}: patch, delete',
  '/api/auth/challenge: get',
  '/api/auth/verify-wallet: post',
  '/api/auth/disconnect: post',
  '/api/auth/logout: post',
  '/api/auth/session: get',
  '/api/users: get, post',
  '/api/users/{wallet}: get, put',
  '/api/users/{wallet}/achievements: get',
  '/api/users/{wallet}/stats: get'
]
2025-01-25 01:14:19 -05:00: Swagger docs available at /api-docs
2025-01-25 01:14:19 -05:00: 

2025-01-25 01:14:19 -05:00: 	   🤺  DegenDuel API  		|  INITIALIZING...
2025-01-25 01:14:19 -05:00: [32minfo[39m: Initializing PostgreSQL database... {"timestamp":"2025-01-25T06:14:19.470Z"}
2025-01-25 01:14:19 -05:00: [32minfo[39m: Starting DegenDuel API... {"port":"3003","timestamp":"2025-01-25T06:14:19.569Z"}
2025-01-25 01:14:19 -05:00: [32minfo[39m: Database initialized successfully at /home/websites/degenduel/data/leaderboard.db {"timestamp":"2025-01-25T06:14:19.763Z"}
2025-01-25 01:14:20 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T06:14:20.465Z"}
2025-01-25 01:14:20 -05:00: [32minfo[39m: Database schema already exists, skipping initialization {"timestamp":"2025-01-25T06:14:20.470Z"}
2025-01-25 01:14:20 -05:00: [32minfo[39m: PostgreSQL database initialized successfully {"timestamp":"2025-01-25T06:14:20.470Z"}
2025-01-25 01:14:20 -05:00: 	   ⚔️   DegenDuel API  		|  ALMOST THERE...
2025-01-25 01:14:20 -05:00: 	   🎯  DegenDuel API  		|  READY!
2025-01-25 01:14:20 -05:00: 	     '--------------> Port 3003 (all interfaces)
2025-01-25 01:22:58 -05:00: [32minfo[39m: PostgreSQL database connection closed {"timestamp":"2025-01-25T06:22:58.848Z"}
2025-01-25 01:23:06 -05:00: Initializing Swagger with single route file...
2025-01-25 01:23:07 -05:00: Successfully loaded routes: [
  '/api/buckets',
  '/api/buckets/{id}',
  '/api/token-buckets/{bucketId}/tokens',
  '/api/token-buckets/{bucketId}/tokens/{tokenId}',
  '/api/token-buckets/{bucketId}',
  '/api/auth/challenge',
  '/api/auth/verify-wallet',
  '/api/auth/disconnect',
  '/api/auth/logout',
  '/api/auth/session',
  '/api/users',
  '/api/users/{wallet}',
  '/api/users/{wallet}/achievements',
  '/api/users/{wallet}/stats'
]
2025-01-25 01:23:07 -05:00: Available operations: [
  '/api/buckets: post, get',
  '/api/buckets/{id}: get',
  '/api/token-buckets/{bucketId}/tokens: post',
  '/api/token-buckets/{bucketId}/tokens/{tokenId}: delete',
  '/api/token-buckets/{bucketId}: patch, delete',
  '/api/auth/challenge: get',
  '/api/auth/verify-wallet: post',
  '/api/auth/disconnect: post',
  '/api/auth/logout: post',
  '/api/auth/session: get',
  '/api/users: get, post',
  '/api/users/{wallet}: get, put',
  '/api/users/{wallet}/achievements: get',
  '/api/users/{wallet}/stats: get'
]
2025-01-25 01:23:08 -05:00: Swagger docs available at /api-docs
2025-01-25 01:23:08 -05:00: 

2025-01-25 01:23:08 -05:00: 	   🤺  DegenDuel API  		|  INITIALIZING...
2025-01-25 01:23:08 -05:00: [32minfo[39m: Initializing PostgreSQL database... {"timestamp":"2025-01-25T06:23:08.650Z"}
2025-01-25 01:23:08 -05:00: [32minfo[39m: Starting DegenDuel API... {"port":"3003","timestamp":"2025-01-25T06:23:08.751Z"}
2025-01-25 01:23:08 -05:00: [32minfo[39m: Database initialized successfully at /home/websites/degenduel/data/leaderboard.db {"timestamp":"2025-01-25T06:23:08.849Z"}
2025-01-25 01:23:09 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T06:23:09.453Z"}
2025-01-25 01:23:09 -05:00: [32minfo[39m: Database schema already exists, skipping initialization {"timestamp":"2025-01-25T06:23:09.553Z"}
2025-01-25 01:23:09 -05:00: [32minfo[39m: PostgreSQL database initialized successfully {"timestamp":"2025-01-25T06:23:09.553Z"}
2025-01-25 01:23:09 -05:00: 	   ⚔️   DegenDuel API  		|  ALMOST THERE...
2025-01-25 01:23:09 -05:00: 	   🎯  DegenDuel API  		|  READY!
2025-01-25 01:23:09 -05:00: 	     '--------------> Port 3003 (all interfaces)
2025-01-25 01:23:24 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T06:23:24.152Z"}
2025-01-25 01:25:44 -05:00: [32minfo[39m: User authenticated: BPuRhkeCkor7DxMrcPVsB4AdW6Pmp5oACjVzpPb72Mhp (role=superadmin) {"timestamp":"2025-01-25T06:25:44.152Z"}
2025-01-25 01:25:44 -05:00: [32minfo[39m: User authenticated: BPuRhkeCkor7DxMrcPVsB4AdW6Pmp5oACjVzpPb72Mhp (role=superadmin) {"timestamp":"2025-01-25T06:25:44.245Z"}
2025-01-25 01:25:44 -05:00: [32minfo[39m: User authenticated: BPuRhkeCkor7DxMrcPVsB4AdW6Pmp5oACjVzpPb72Mhp (role=superadmin) {"timestamp":"2025-01-25T06:25:44.349Z"}
2025-01-25 01:25:44 -05:00: [32minfo[39m: User authenticated: BPuRhkeCkor7DxMrcPVsB4AdW6Pmp5oACjVzpPb72Mhp (role=superadmin) {"timestamp":"2025-01-25T06:25:44.447Z"}
2025-01-25 01:25:44 -05:00: [32minfo[39m: User authenticated: BPuRhkeCkor7DxMrcPVsB4AdW6Pmp5oACjVzpPb72Mhp (role=superadmin) {"timestamp":"2025-01-25T06:25:44.450Z"}
2025-01-25 01:25:44 -05:00: [32minfo[39m: User authenticated: BPuRhkeCkor7DxMrcPVsB4AdW6Pmp5oACjVzpPb72Mhp (role=superadmin) {"timestamp":"2025-01-25T06:25:44.546Z"}
2025-01-25 01:25:44 -05:00: [32minfo[39m: User authenticated: BPuRhkeCkor7DxMrcPVsB4AdW6Pmp5oACjVzpPb72Mhp (role=superadmin) {"timestamp":"2025-01-25T06:25:44.550Z"}
2025-01-25 01:25:44 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T06:25:44.551Z"}
2025-01-25 01:25:44 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T06:25:44.647Z"}
2025-01-25 01:25:44 -05:00: [32minfo[39m: User authenticated: BPuRhkeCkor7DxMrcPVsB4AdW6Pmp5oACjVzpPb72Mhp (role=superadmin) {"timestamp":"2025-01-25T06:25:44.648Z"}
2025-01-25 01:25:44 -05:00: [32minfo[39m: User authenticated: BPuRhkeCkor7DxMrcPVsB4AdW6Pmp5oACjVzpPb72Mhp (role=superadmin) {"timestamp":"2025-01-25T06:25:44.649Z"}
2025-01-25 01:25:44 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T06:25:44.745Z"}
2025-01-25 01:25:44 -05:00: [32minfo[39m: User authenticated: BPuRhkeCkor7DxMrcPVsB4AdW6Pmp5oACjVzpPb72Mhp (role=superadmin) {"timestamp":"2025-01-25T06:25:44.747Z"}
2025-01-25 01:25:53 -05:00: [31merror[39m: Failed to fetch contest performance rankings: 
Invalid `prisma.users.findMany()` invocation:

{
  select: {
    wallet_address: true,
    nickname: true,
    total_contests: true,
    total_earnings: true,
    contest_participants: {
      where: {
        AND: [
          {
            contest: {
              status: "COMPLETED"
            }
          },
          {
            created_at: {
              gte: new Date("2024-12-26T06:25:53.845Z")
            }
          }
        ]
      },
      select: {
        final_rank: true,
        created_at: true
      },
      orderBy: {
        created_at: "asc"
      }
    }
  },
  where: {
    total_contests: {
      gt: 0
    }
  },
  orderBy: {
    total_earnings: "desc"
  },
  take: 10,
  skip: 0
}

Unknown argument `contest`. Did you mean `contests`? Available options are marked with ?. {"clientVersion":"6.1.0","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    wallet_address: true,\n    nickname: true,\n    total_contests: true,\n    total_earnings: true,\n    contest_participants: {\n      where: {\n        AND: [\n          {\n            contest: {\n              status: \"COMPLETED\"\n            }\n          },\n          {\n            created_at: {\n              gte: new Date(\"2024-12-26T06:25:53.845Z\")\n            }\n          }\n        ]\n      },\n      select: {\n        final_rank: true,\n        created_at: true\n      },\n      orderBy: {\n        created_at: \"asc\"\n      }\n    }\n  },\n  where: {\n    total_contests: {\n      gt: 0\n    }\n  },\n  orderBy: {\n    total_earnings: \"desc\"\n  },\n  take: 10,\n  skip: 0\n}\n\nUnknown argument `contest`. Did you mean `contests`? Available options are marked with ?.\n    at wn (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at qn.handleRequestError (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6958)\n    at qn.handleAndLogRequestError (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6640)\n    at qn.request (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6347)\n    at async l (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:130:9616)\n    at async file:///home/websites/degenduel/routes/prisma/leaderboard.js:254:22","timestamp":"2025-01-25T06:25:53.946Z"}
2025-01-25 01:25:54 -05:00: [31merror[39m: Failed to fetch contest performance rankings: 
Invalid `prisma.users.findMany()` invocation:

{
  select: {
    wallet_address: true,
    nickname: true,
    total_contests: true,
    total_earnings: true,
    contest_participants: {
      where: {
        AND: [
          {
            contest: {
              status: "COMPLETED"
            }
          },
          {
            created_at: {
              gte: new Date("2024-12-26T06:25:54.046Z")
            }
          }
        ]
      },
      select: {
        final_rank: true,
        created_at: true
      },
      orderBy: {
        created_at: "asc"
      }
    }
  },
  where: {
    total_contests: {
      gt: 0
    }
  },
  orderBy: {
    total_earnings: "desc"
  },
  take: 10,
  skip: 0
}

Unknown argument `contest`. Did you mean `contests`? Available options are marked with ?. {"clientVersion":"6.1.0","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    wallet_address: true,\n    nickname: true,\n    total_contests: true,\n    total_earnings: true,\n    contest_participants: {\n      where: {\n        AND: [\n          {\n            contest: {\n              status: \"COMPLETED\"\n            }\n          },\n          {\n            created_at: {\n              gte: new Date(\"2024-12-26T06:25:54.046Z\")\n            }\n          }\n        ]\n      },\n      select: {\n        final_rank: true,\n        created_at: true\n      },\n      orderBy: {\n        created_at: \"asc\"\n      }\n    }\n  },\n  where: {\n    total_contests: {\n      gt: 0\n    }\n  },\n  orderBy: {\n    total_earnings: \"desc\"\n  },\n  take: 10,\n  skip: 0\n}\n\nUnknown argument `contest`. Did you mean `contests`? Available options are marked with ?.\n    at wn (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at qn.handleRequestError (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6958)\n    at qn.handleAndLogRequestError (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6640)\n    at qn.request (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6347)\n    at async l (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:130:9616)\n    at async file:///home/websites/degenduel/routes/prisma/leaderboard.js:254:22","timestamp":"2025-01-25T06:25:54.144Z"}
2025-01-25 01:27:18 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T06:27:18.946Z"}
2025-01-25 01:28:18 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T06:28:18.945Z"}
2025-01-25 01:29:18 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T06:29:18.944Z"}
2025-01-25 01:30:16 -05:00: [31merror[39m: Failed to fetch contest performance rankings: 
Invalid `prisma.users.findMany()` invocation:

{
  select: {
    wallet_address: true,
    nickname: true,
    total_contests: true,
    total_earnings: true,
    contest_participants: {
      where: {
        AND: [
          {
            contest: {
              status: "COMPLETED"
            }
          },
          {
            created_at: {
              gte: new Date("2024-12-26T06:30:16.242Z")
            }
          }
        ]
      },
      select: {
        final_rank: true,
        created_at: true
      },
      orderBy: {
        created_at: "asc"
      }
    }
  },
  where: {
    total_contests: {
      gt: 0
    }
  },
  orderBy: {
    total_earnings: "desc"
  },
  take: 5,
  skip: 0
}

Unknown argument `contest`. Did you mean `contests`? Available options are marked with ?. {"clientVersion":"6.1.0","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    wallet_address: true,\n    nickname: true,\n    total_contests: true,\n    total_earnings: true,\n    contest_participants: {\n      where: {\n        AND: [\n          {\n            contest: {\n              status: \"COMPLETED\"\n            }\n          },\n          {\n            created_at: {\n              gte: new Date(\"2024-12-26T06:30:16.242Z\")\n            }\n          }\n        ]\n      },\n      select: {\n        final_rank: true,\n        created_at: true\n      },\n      orderBy: {\n        created_at: \"asc\"\n      }\n    }\n  },\n  where: {\n    total_contests: {\n      gt: 0\n    }\n  },\n  orderBy: {\n    total_earnings: \"desc\"\n  },\n  take: 5,\n  skip: 0\n}\n\nUnknown argument `contest`. Did you mean `contests`? Available options are marked with ?.\n    at wn (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at qn.handleRequestError (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6958)\n    at qn.handleAndLogRequestError (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6640)\n    at qn.request (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6347)\n    at async l (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:130:9616)\n    at async file:///home/websites/degenduel/routes/prisma/leaderboard.js:254:22","timestamp":"2025-01-25T06:30:16.245Z"}
2025-01-25 01:30:18 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T06:30:18.945Z"}
2025-01-25 01:31:01 -05:00: [31merror[39m: Failed to fetch contest performance rankings: 
Invalid `prisma.users.findMany()` invocation:

{
  select: {
    wallet_address: true,
    nickname: true,
    total_contests: true,
    total_earnings: true,
    contest_participants: {
      where: {
        AND: [
          {
            contest: {
              status: "COMPLETED"
            }
          },
          {
            created_at: {
              gte: new Date("2024-12-26T06:31:01.441Z")
            }
          }
        ]
      },
      select: {
        final_rank: true,
        created_at: true
      },
      orderBy: {
        created_at: "asc"
      }
    }
  },
  where: {
    total_contests: {
      gt: 0
    }
  },
  orderBy: {
    total_earnings: "desc"
  },
  take: 10,
  skip: 0
}

Unknown argument `contest`. Did you mean `contests`? Available options are marked with ?. {"clientVersion":"6.1.0","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    wallet_address: true,\n    nickname: true,\n    total_contests: true,\n    total_earnings: true,\n    contest_participants: {\n      where: {\n        AND: [\n          {\n            contest: {\n              status: \"COMPLETED\"\n            }\n          },\n          {\n            created_at: {\n              gte: new Date(\"2024-12-26T06:31:01.441Z\")\n            }\n          }\n        ]\n      },\n      select: {\n        final_rank: true,\n        created_at: true\n      },\n      orderBy: {\n        created_at: \"asc\"\n      }\n    }\n  },\n  where: {\n    total_contests: {\n      gt: 0\n    }\n  },\n  orderBy: {\n    total_earnings: \"desc\"\n  },\n  take: 10,\n  skip: 0\n}\n\nUnknown argument `contest`. Did you mean `contests`? Available options are marked with ?.\n    at wn (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at qn.handleRequestError (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6958)\n    at qn.handleAndLogRequestError (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6640)\n    at qn.request (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6347)\n    at async l (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:130:9616)\n    at async file:///home/websites/degenduel/routes/prisma/leaderboard.js:254:22","timestamp":"2025-01-25T06:31:01.542Z"}
2025-01-25 01:31:01 -05:00: [31merror[39m: Failed to fetch contest performance rankings: 
Invalid `prisma.users.findMany()` invocation:

{
  select: {
    wallet_address: true,
    nickname: true,
    total_contests: true,
    total_earnings: true,
    contest_participants: {
      where: {
        AND: [
          {
            contest: {
              status: "COMPLETED"
            }
          },
          {
            created_at: {
              gte: new Date("2024-12-26T06:31:01.741Z")
            }
          }
        ]
      },
      select: {
        final_rank: true,
        created_at: true
      },
      orderBy: {
        created_at: "asc"
      }
    }
  },
  where: {
    total_contests: {
      gt: 0
    }
  },
  orderBy: {
    total_earnings: "desc"
  },
  take: 10,
  skip: 0
}

Unknown argument `contest`. Did you mean `contests`? Available options are marked with ?. {"clientVersion":"6.1.0","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    wallet_address: true,\n    nickname: true,\n    total_contests: true,\n    total_earnings: true,\n    contest_participants: {\n      where: {\n        AND: [\n          {\n            contest: {\n              status: \"COMPLETED\"\n            }\n          },\n          {\n            created_at: {\n              gte: new Date(\"2024-12-26T06:31:01.741Z\")\n            }\n          }\n        ]\n      },\n      select: {\n        final_rank: true,\n        created_at: true\n      },\n      orderBy: {\n        created_at: \"asc\"\n      }\n    }\n  },\n  where: {\n    total_contests: {\n      gt: 0\n    }\n  },\n  orderBy: {\n    total_earnings: \"desc\"\n  },\n  take: 10,\n  skip: 0\n}\n\nUnknown argument `contest`. Did you mean `contests`? Available options are marked with ?.\n    at wn (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at qn.handleRequestError (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6958)\n    at qn.handleAndLogRequestError (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6640)\n    at qn.request (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6347)\n    at async l (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:130:9616)\n    at async file:///home/websites/degenduel/routes/prisma/leaderboard.js:254:22","timestamp":"2025-01-25T06:31:01.847Z"}
2025-01-25 01:31:07 -05:00: [31merror[39m: Failed to fetch contest performance rankings: 
Invalid `prisma.users.findMany()` invocation:

{
  select: {
    wallet_address: true,
    nickname: true,
    total_contests: true,
    total_earnings: true,
    contest_participants: {
      where: {
        AND: [
          {
            contest: {
              status: "COMPLETED"
            }
          },
          {
            created_at: {
              gte: new Date("2024-12-26T06:31:07.141Z")
            }
          }
        ]
      },
      select: {
        final_rank: true,
        created_at: true
      },
      orderBy: {
        created_at: "asc"
      }
    }
  },
  where: {
    total_contests: {
      gt: 0
    }
  },
  orderBy: {
    total_earnings: "desc"
  },
  take: 10,
  skip: 0
}

Unknown argument `contest`. Did you mean `contests`? Available options are marked with ?. {"clientVersion":"6.1.0","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    wallet_address: true,\n    nickname: true,\n    total_contests: true,\n    total_earnings: true,\n    contest_participants: {\n      where: {\n        AND: [\n          {\n            contest: {\n              status: \"COMPLETED\"\n            }\n          },\n          {\n            created_at: {\n              gte: new Date(\"2024-12-26T06:31:07.141Z\")\n            }\n          }\n        ]\n      },\n      select: {\n        final_rank: true,\n        created_at: true\n      },\n      orderBy: {\n        created_at: \"asc\"\n      }\n    }\n  },\n  where: {\n    total_contests: {\n      gt: 0\n    }\n  },\n  orderBy: {\n    total_earnings: \"desc\"\n  },\n  take: 10,\n  skip: 0\n}\n\nUnknown argument `contest`. Did you mean `contests`? Available options are marked with ?.\n    at wn (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at qn.handleRequestError (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6958)\n    at qn.handleAndLogRequestError (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6640)\n    at qn.request (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6347)\n    at async l (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:130:9616)\n    at async file:///home/websites/degenduel/routes/prisma/leaderboard.js:254:22","timestamp":"2025-01-25T06:31:07.145Z"}
2025-01-25 01:31:07 -05:00: [31merror[39m: Failed to fetch contest performance rankings: 
Invalid `prisma.users.findMany()` invocation:

{
  select: {
    wallet_address: true,
    nickname: true,
    total_contests: true,
    total_earnings: true,
    contest_participants: {
      where: {
        AND: [
          {
            contest: {
              status: "COMPLETED"
            }
          },
          {
            created_at: {
              gte: new Date("2024-12-26T06:31:07.441Z")
            }
          }
        ]
      },
      select: {
        final_rank: true,
        created_at: true
      },
      orderBy: {
        created_at: "asc"
      }
    }
  },
  where: {
    total_contests: {
      gt: 0
    }
  },
  orderBy: {
    total_earnings: "desc"
  },
  take: 10,
  skip: 0
}

Unknown argument `contest`. Did you mean `contests`? Available options are marked with ?. {"clientVersion":"6.1.0","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    wallet_address: true,\n    nickname: true,\n    total_contests: true,\n    total_earnings: true,\n    contest_participants: {\n      where: {\n        AND: [\n          {\n            contest: {\n              status: \"COMPLETED\"\n            }\n          },\n          {\n            created_at: {\n              gte: new Date(\"2024-12-26T06:31:07.441Z\")\n            }\n          }\n        ]\n      },\n      select: {\n        final_rank: true,\n        created_at: true\n      },\n      orderBy: {\n        created_at: \"asc\"\n      }\n    }\n  },\n  where: {\n    total_contests: {\n      gt: 0\n    }\n  },\n  orderBy: {\n    total_earnings: \"desc\"\n  },\n  take: 10,\n  skip: 0\n}\n\nUnknown argument `contest`. Did you mean `contests`? Available options are marked with ?.\n    at wn (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at qn.handleRequestError (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6958)\n    at qn.handleAndLogRequestError (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6640)\n    at qn.request (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6347)\n    at async l (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:130:9616)\n    at async file:///home/websites/degenduel/routes/prisma/leaderboard.js:254:22","timestamp":"2025-01-25T06:31:07.445Z"}
2025-01-25 01:31:13 -05:00: [31merror[39m: Failed to fetch contest performance rankings: 
Invalid `prisma.users.findMany()` invocation:

{
  select: {
    wallet_address: true,
    nickname: true,
    total_contests: true,
    total_earnings: true,
    contest_participants: {
      where: {
        AND: [
          {
            contest: {
              status: "COMPLETED"
            }
          },
          {
            created_at: {
              gte: new Date("2024-12-26T06:31:13.443Z")
            }
          }
        ]
      },
      select: {
        final_rank: true,
        created_at: true
      },
      orderBy: {
        created_at: "asc"
      }
    }
  },
  where: {
    total_contests: {
      gt: 0
    }
  },
  orderBy: {
    total_earnings: "desc"
  },
  take: 10,
  skip: 0
}

Unknown argument `contest`. Did you mean `contests`? Available options are marked with ?. {"clientVersion":"6.1.0","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    wallet_address: true,\n    nickname: true,\n    total_contests: true,\n    total_earnings: true,\n    contest_participants: {\n      where: {\n        AND: [\n          {\n            contest: {\n              status: \"COMPLETED\"\n            }\n          },\n          {\n            created_at: {\n              gte: new Date(\"2024-12-26T06:31:13.443Z\")\n            }\n          }\n        ]\n      },\n      select: {\n        final_rank: true,\n        created_at: true\n      },\n      orderBy: {\n        created_at: \"asc\"\n      }\n    }\n  },\n  where: {\n    total_contests: {\n      gt: 0\n    }\n  },\n  orderBy: {\n    total_earnings: \"desc\"\n  },\n  take: 10,\n  skip: 0\n}\n\nUnknown argument `contest`. Did you mean `contests`? Available options are marked with ?.\n    at wn (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at qn.handleRequestError (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6958)\n    at qn.handleAndLogRequestError (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6640)\n    at qn.request (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6347)\n    at async l (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:130:9616)\n    at async file:///home/websites/degenduel/routes/prisma/leaderboard.js:254:22","timestamp":"2025-01-25T06:31:13.541Z"}
2025-01-25 01:31:18 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T06:31:18.941Z"}
2025-01-25 01:32:18 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T06:32:18.942Z"}
2025-01-25 01:33:18 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T06:33:18.941Z"}
2025-01-25 01:34:18 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T06:34:18.740Z"}
2025-01-25 01:35:18 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T06:35:18.940Z"}
2025-01-25 01:36:15 -05:00: [31merror[39m: Failed to fetch contest performance rankings: 
Invalid `prisma.users.findMany()` invocation:

{
  select: {
    wallet_address: true,
    nickname: true,
    total_contests: true,
    total_earnings: true,
    contest_participants: {
      where: {
        AND: [
          {
            contest: {
              status: "COMPLETED"
            }
          },
          {
            created_at: {
              gte: new Date("2024-12-26T06:36:15.040Z")
            }
          }
        ]
      },
      select: {
        final_rank: true,
        created_at: true
      },
      orderBy: {
        created_at: "asc"
      }
    }
  },
  where: {
    total_contests: {
      gt: 0
    }
  },
  orderBy: {
    total_earnings: "desc"
  },
  take: 10,
  skip: 0
}

Unknown argument `contest`. Did you mean `contests`? Available options are marked with ?. {"clientVersion":"6.1.0","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    wallet_address: true,\n    nickname: true,\n    total_contests: true,\n    total_earnings: true,\n    contest_participants: {\n      where: {\n        AND: [\n          {\n            contest: {\n              status: \"COMPLETED\"\n            }\n          },\n          {\n            created_at: {\n              gte: new Date(\"2024-12-26T06:36:15.040Z\")\n            }\n          }\n        ]\n      },\n      select: {\n        final_rank: true,\n        created_at: true\n      },\n      orderBy: {\n        created_at: \"asc\"\n      }\n    }\n  },\n  where: {\n    total_contests: {\n      gt: 0\n    }\n  },\n  orderBy: {\n    total_earnings: \"desc\"\n  },\n  take: 10,\n  skip: 0\n}\n\nUnknown argument `contest`. Did you mean `contests`? Available options are marked with ?.\n    at wn (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at qn.handleRequestError (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6958)\n    at qn.handleAndLogRequestError (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6640)\n    at qn.request (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6347)\n    at async l (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:130:9616)\n    at async file:///home/websites/degenduel/routes/prisma/leaderboard.js:254:22","timestamp":"2025-01-25T06:36:15.047Z"}
2025-01-25 01:36:15 -05:00: [31merror[39m: Failed to fetch contest performance rankings: 
Invalid `prisma.users.findMany()` invocation:

{
  select: {
    wallet_address: true,
    nickname: true,
    total_contests: true,
    total_earnings: true,
    contest_participants: {
      where: {
        AND: [
          {
            contest: {
              status: "COMPLETED"
            }
          },
          {
            created_at: {
              gte: new Date("2024-12-26T06:36:15.238Z")
            }
          }
        ]
      },
      select: {
        final_rank: true,
        created_at: true
      },
      orderBy: {
        created_at: "asc"
      }
    }
  },
  where: {
    total_contests: {
      gt: 0
    }
  },
  orderBy: {
    total_earnings: "desc"
  },
  take: 10,
  skip: 0
}

Unknown argument `contest`. Did you mean `contests`? Available options are marked with ?. {"clientVersion":"6.1.0","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    wallet_address: true,\n    nickname: true,\n    total_contests: true,\n    total_earnings: true,\n    contest_participants: {\n      where: {\n        AND: [\n          {\n            contest: {\n              status: \"COMPLETED\"\n            }\n          },\n          {\n            created_at: {\n              gte: new Date(\"2024-12-26T06:36:15.238Z\")\n            }\n          }\n        ]\n      },\n      select: {\n        final_rank: true,\n        created_at: true\n      },\n      orderBy: {\n        created_at: \"asc\"\n      }\n    }\n  },\n  where: {\n    total_contests: {\n      gt: 0\n    }\n  },\n  orderBy: {\n    total_earnings: \"desc\"\n  },\n  take: 10,\n  skip: 0\n}\n\nUnknown argument `contest`. Did you mean `contests`? Available options are marked with ?.\n    at wn (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at qn.handleRequestError (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6958)\n    at qn.handleAndLogRequestError (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6640)\n    at qn.request (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6347)\n    at async l (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:130:9616)\n    at async file:///home/websites/degenduel/routes/prisma/leaderboard.js:254:22","timestamp":"2025-01-25T06:36:15.242Z"}
2025-01-25 01:36:18 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T06:36:18.938Z"}
2025-01-25 01:37:03 -05:00: [31merror[39m: Failed to fetch contest performance rankings: 
Invalid `prisma.users.findMany()` invocation:

{
  select: {
    wallet_address: true,
    nickname: true,
    total_contests: true,
    total_earnings: true,
    contest_participants: {
      where: {
        AND: [
          {
            contest: {
              status: "COMPLETED"
            }
          },
          {
            created_at: {
              gte: new Date("2024-12-26T06:37:03.439Z")
            }
          }
        ]
      },
      select: {
        final_rank: true,
        created_at: true
      },
      orderBy: {
        created_at: "asc"
      }
    }
  },
  where: {
    total_contests: {
      gt: 0
    }
  },
  orderBy: {
    total_earnings: "desc"
  },
  take: 10,
  skip: 0
}

Unknown argument `contest`. Did you mean `contests`? Available options are marked with ?. {"clientVersion":"6.1.0","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    wallet_address: true,\n    nickname: true,\n    total_contests: true,\n    total_earnings: true,\n    contest_participants: {\n      where: {\n        AND: [\n          {\n            contest: {\n              status: \"COMPLETED\"\n            }\n          },\n          {\n            created_at: {\n              gte: new Date(\"2024-12-26T06:37:03.439Z\")\n            }\n          }\n        ]\n      },\n      select: {\n        final_rank: true,\n        created_at: true\n      },\n      orderBy: {\n        created_at: \"asc\"\n      }\n    }\n  },\n  where: {\n    total_contests: {\n      gt: 0\n    }\n  },\n  orderBy: {\n    total_earnings: \"desc\"\n  },\n  take: 10,\n  skip: 0\n}\n\nUnknown argument `contest`. Did you mean `contests`? Available options are marked with ?.\n    at wn (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at qn.handleRequestError (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6958)\n    at qn.handleAndLogRequestError (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6640)\n    at qn.request (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6347)\n    at async l (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:130:9616)\n    at async file:///home/websites/degenduel/routes/prisma/leaderboard.js:254:22","timestamp":"2025-01-25T06:37:03.539Z"}
2025-01-25 01:37:03 -05:00: [31merror[39m: Failed to fetch contest performance rankings: 
Invalid `prisma.users.findMany()` invocation:

{
  select: {
    wallet_address: true,
    nickname: true,
    total_contests: true,
    total_earnings: true,
    contest_participants: {
      where: {
        AND: [
          {
            contest: {
              status: "COMPLETED"
            }
          },
          {
            created_at: {
              gte: new Date("2024-12-26T06:37:03.640Z")
            }
          }
        ]
      },
      select: {
        final_rank: true,
        created_at: true
      },
      orderBy: {
        created_at: "asc"
      }
    }
  },
  where: {
    total_contests: {
      gt: 0
    }
  },
  orderBy: {
    total_earnings: "desc"
  },
  take: 10,
  skip: 0
}

Unknown argument `contest`. Did you mean `contests`? Available options are marked with ?. {"clientVersion":"6.1.0","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    wallet_address: true,\n    nickname: true,\n    total_contests: true,\n    total_earnings: true,\n    contest_participants: {\n      where: {\n        AND: [\n          {\n            contest: {\n              status: \"COMPLETED\"\n            }\n          },\n          {\n            created_at: {\n              gte: new Date(\"2024-12-26T06:37:03.640Z\")\n            }\n          }\n        ]\n      },\n      select: {\n        final_rank: true,\n        created_at: true\n      },\n      orderBy: {\n        created_at: \"asc\"\n      }\n    }\n  },\n  where: {\n    total_contests: {\n      gt: 0\n    }\n  },\n  orderBy: {\n    total_earnings: \"desc\"\n  },\n  take: 10,\n  skip: 0\n}\n\nUnknown argument `contest`. Did you mean `contests`? Available options are marked with ?.\n    at wn (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at qn.handleRequestError (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6958)\n    at qn.handleAndLogRequestError (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6640)\n    at qn.request (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6347)\n    at async l (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:130:9616)\n    at async file:///home/websites/degenduel/routes/prisma/leaderboard.js:254:22","timestamp":"2025-01-25T06:37:03.643Z"}
2025-01-25 01:37:16 -05:00: [31merror[39m: Failed to fetch contest performance rankings: 
Invalid `prisma.users.findMany()` invocation:

{
  select: {
    wallet_address: true,
    nickname: true,
    total_contests: true,
    total_earnings: true,
    contest_participants: {
      where: {
        AND: [
          {
            contest: {
              status: "COMPLETED"
            }
          },
          {
            created_at: {
              gte: new Date("2024-12-26T06:37:16.638Z")
            }
          }
        ]
      },
      select: {
        final_rank: true,
        created_at: true
      },
      orderBy: {
        created_at: "asc"
      }
    }
  },
  where: {
    total_contests: {
      gt: 0
    }
  },
  orderBy: {
    total_earnings: "desc"
  },
  take: 10,
  skip: 0
}

Unknown argument `contest`. Did you mean `contests`? Available options are marked with ?. {"clientVersion":"6.1.0","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    wallet_address: true,\n    nickname: true,\n    total_contests: true,\n    total_earnings: true,\n    contest_participants: {\n      where: {\n        AND: [\n          {\n            contest: {\n              status: \"COMPLETED\"\n            }\n          },\n          {\n            created_at: {\n              gte: new Date(\"2024-12-26T06:37:16.638Z\")\n            }\n          }\n        ]\n      },\n      select: {\n        final_rank: true,\n        created_at: true\n      },\n      orderBy: {\n        created_at: \"asc\"\n      }\n    }\n  },\n  where: {\n    total_contests: {\n      gt: 0\n    }\n  },\n  orderBy: {\n    total_earnings: \"desc\"\n  },\n  take: 10,\n  skip: 0\n}\n\nUnknown argument `contest`. Did you mean `contests`? Available options are marked with ?.\n    at wn (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at qn.handleRequestError (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6958)\n    at qn.handleAndLogRequestError (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6640)\n    at qn.request (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6347)\n    at async l (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:130:9616)\n    at async file:///home/websites/degenduel/routes/prisma/leaderboard.js:254:22","timestamp":"2025-01-25T06:37:16.642Z"}
2025-01-25 01:37:19 -05:00: [32minfo[39m: PostgreSQL connected successfully {"timestamp":"2025-01-25T06:37:19.137Z"}
2025-01-25 01:37:47 -05:00: [31merror[39m: Failed to fetch contest performance rankings: 
Invalid `prisma.users.findMany()` invocation:

{
  select: {
    wallet_address: true,
    nickname: true,
    total_contests: true,
    total_earnings: true,
    contest_participants: {
      where: {
        AND: [
          {
            contest: {
              status: "COMPLETED"
            }
          },
          {
            created_at: {
              gte: new Date("2024-12-26T06:37:47.637Z")
            }
          }
        ]
      },
      select: {
        final_rank: true,
        created_at: true
      },
      orderBy: {
        created_at: "asc"
      }
    }
  },
  where: {
    total_contests: {
      gt: 0
    }
  },
  orderBy: {
    total_earnings: "desc"
  },
  take: 10,
  skip: 0
}

Unknown argument `contest`. Did you mean `contests`? Available options are marked with ?. {"clientVersion":"6.1.0","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    wallet_address: true,\n    nickname: true,\n    total_contests: true,\n    total_earnings: true,\n    contest_participants: {\n      where: {\n        AND: [\n          {\n            contest: {\n              status: \"COMPLETED\"\n            }\n          },\n          {\n            created_at: {\n              gte: new Date(\"2024-12-26T06:37:47.637Z\")\n            }\n          }\n        ]\n      },\n      select: {\n        final_rank: true,\n        created_at: true\n      },\n      orderBy: {\n        created_at: \"asc\"\n      }\n    }\n  },\n  where: {\n    total_contests: {\n      gt: 0\n    }\n  },\n  orderBy: {\n    total_earnings: \"desc\"\n  },\n  take: 10,\n  skip: 0\n}\n\nUnknown argument `contest`. Did you mean `contests`? Available options are marked with ?.\n    at wn (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at qn.handleRequestError (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6958)\n    at qn.handleAndLogRequestError (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6640)\n    at qn.request (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:121:6347)\n    at async l (/home/websites/degenduel/node_modules/@prisma/client/runtime/library.js:130:9616)\n    at async file:///home/websites/degenduel/routes/prisma/leaderboard.js:254:22","timestamp":"2025-01-25T06:37:47.641Z"}
