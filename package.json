{
  "name": "degenduel-api",
  "private": true,
  "version": "0.8.1",
  "type": "module",
  "scripts": {
    "// MASTER DEGENDUEL RESTART (PREFERRED RESTART METHOD)": "=============================================================================================================",
    "re": "pm2 delete all && pm2 start ecosystem.config.cjs && pm2 logs degenduel-api-test",
    "// Master DegenDuel Start/Stop/Restart": "==================================================================================================",
    "pm2:start-all": "pm2 start ecosystem.config.cjs && pm2 logs degenduel-api-test",
    "pm2:stop-all": "pm2 stop all",
    "pm2:restart-all": "npm run pm2:stop-all && npm run pm2:start-all && pm2 logs degenduel-api-test",
    "// DegenDuel App-Specific PM2 Commands": "============================================================================================================",
    "up": "pm2 start ecosystem.config.cjs",
    "down": "pm2 stop all",
    "reload": "pm2 restart all --update-env",
    "// ---> API": "=============================================================================================================================",
    "api:up": "pm2 start ecosystem.config.cjs --only degenduel-api",
    "api:down": "pm2 stop degenduel-api",
    "api:reload": "pm2 restart degenduel-api --update-env",
    "// ---> Lobby": "===========================================================================================================================",
    "lobby:up": "pm2 start ecosystem.config.cjs --only degenduel-lobby",
    "lobby:down": "pm2 stop degenduel-lobby",
    "lobby:reload": "pm2 restart degenduel-lobby --update-env",
    "// ---> Reflections": "=====================================================================================================================",
    "reflections:up": "pm2 start ecosystem.config.cjs --only degenduel-reflections",
    "reflections:down": "pm2 stop degenduel-reflections",
    "reflections:reload": "pm2 restart degenduel-reflections --update-env",
    "// ---> MCP": "=============================================================================================================================",
    "mcp:up": "pm2 start ecosystem.config.cjs --only mcp-server",
    "mcp:down": "pm2 stop mcp-server",
    "mcp:reload": "pm2 restart mcp-server --update-env",

    "// General DD Services Testing": "==========================================================================================================",
    "test:services": "node scripts/service-status-report.js # Reports saved to reports/service-reports/YYYY-MM-DD/",
    "test:websocket": "node scripts/test-websocket.js",
    "test:websocket-envs": "node --experimental-loader=ts-node/esm --experimental-specifier-resolution=node scripts/test-websocket-envs.js",

    "// DD Websockets Testing": "================================================================================================================",
    "wss:websocket": "node scripts/test-websocket.js",
    "wss:base-websocket": "node scripts/test-base-websocket.js",
    "wss:websocket-envs": "node --experimental-loader=ts-node/esm --experimental-specifier-resolution=node scripts/test-websocket-envs.js",
    "wss:test": "node scripts/ws-test.js",
    "wss:migration": "node scripts/websocket-migration-status.js",

    "// Pump.fun Testing": "=====================================================================================================================",
    "pump:test": "node scripts/mm/test-pumpfun.ts",

    "// DD Market Maker Testing": "==============================================================================================================",
    "mm": "./scripts/mm/run.sh",
    "mm:consolidate": "node scripts/mm/consolidate.js",
    "mm:audit": "node scripts/mm/audit.js",

    "// DD System Status Reporting": "===========================================================================================================",
    "sys": "./tools/system-status.sh",
    "sys:ai": "./tools/system-status.sh --ai",
    "sys:report": "./tools/system-status.sh --ai",

    "// Linting": "==============================================================================================================================",
    "lint:ai": "claude -p 'you are a linter. please look at the changes vs. main and report any issues related to typos. report the filename and line number on one line, and a description of the issue on the second line. do not return any other text.'",
    
    "// Swagger Docs Generation": "==============================================================================================================",
    "generate-swagger": "node scripts/generate-swagger.js",

    "// Schema Analysis & Reconciliation Tools": "===============================================================================================",
    "db:reconcile": "./scripts/db-tools.sh reconcile # Compare Prisma schema with database structure",
    "db:reconcile-ai": "./scripts/db-tools.sh reconcile --ai-analysis # AI analysis of schema differences",
    "db:reconcile-fix": "./scripts/db-tools.sh reconcile --generate-migration # Generate migration script to fix differences",
    "db:create-ai-config": "./scripts/db-tools.sh create-ai-config # Create AI config for database comparison",
    "db:create-reconcile-ai-config": "./scripts/db-tools.sh create-reconcile-ai-config # Create AI config for schema reconciliation",
  
    "// db-tools Script Commands": "=============================================================================================================",
    "db:bonkfa": "./scripts/db-tools.sh bonkfa",
    "db:compliment": "./scripts/db-tools.sh compliment",
    "db:money": "./scripts/db-tools.sh money",
    "db:help": "./scripts/db-tools.sh help",
    "db:status": "./scripts/db-tools.sh status",
    "db:compare": "./scripts/db-tools.sh compare # Reports saved to reports/db_comparisons/YYYY-MM-DD/",
    "db:ai-compare": "./scripts/db-tools.sh compare --ai-analysis # Reports and AI analysis saved to reports/db_comparisons/YYYY-MM-DD/",
    "db:backup": "./scripts/db-tools.sh backup",
    "db:safe-migrate": "npm run db:backup && npm run db:reset-test && npx prisma migrate dev",
    "db:reset-test": "./scripts/db-tools.sh reset-test",
    "db:restore": "./scripts/db-tools.sh restore",    

    "// Helpful Prisma Commands": "=============================================================================================================",
    "prisma:format": "prisma format",
    "prisma:validate": "prisma validate",
    "prisma:generate": "prisma generate",
    "prisma:studio": "prisma studio",
    "prisma:migrate": "prisma migrate dev",
    "prisma:migrate-status": "prisma migrate status",
    "prisma:migrate-diff": "prisma migrate diff",
    "prisma:migrate-resolve": "prisma migrate resolve",
    "prisma:migrate-deploy": "prisma migrate deploy",
    "prisma:migrate-dev-create": "prisma migrate dev --create-only",
    "prisma:push": "prisma db push",
    "prisma:pull": "prisma db pull",
    "prisma:seed": "prisma db seed",
    "prisma:reset": "prisma migrate reset",
            
    "// [DEPRECATED] Database Initialization": "================================================================================================",
    "DEPRECATED-init-db": "node db/init-tables.js",
    "DEPRECATED-setup-db": "NODE_OPTIONS='--experimental-loader=ts-node/esm' ts-node scripts/setup-db.ts",
    "DEPRECATED-setup-db-js": "node scripts/setup-db.js",
    "DEPRECATED-test-db": "NODE_OPTIONS='--experimental-loader=ts-node/esm' ts-node scripts/test-db-simple.ts",
    "// [DEPRECATED] System Management": "======================================================================================================",
    "DEPRECATED-dev": "node index.js",
    "DEPRECATED-start": "node --experimental-loader=ts-node/esm --experimental-specifier-resolution=node index.js",
    "DEPRECATED-stop": "npm run stop:api",    
    "// [DEPRECATED] Log Monitoring": "=========================================================================================================",
    "DEPRECATED-logs": "node scripts/watchLogs.js all 100",
    "DEPRECATED-logs:api": "node scripts/watchLogs.js api 100",
    "DEPRECATED-logs:error": "node scripts/watchLogs.js error 100",
    "DEPRECATED-logs:raw": "node scripts/watchLogs.js all 100 --raw",
    "DEPRECATED-logs:clear": "rm -f server/logs/*.log",
    "// [DEPRECATED] PM2 Commands": "===========================================================================================================",
    "DEPRECATED-pm2:start": "pm2 start ecosystem.config.cjs --only degenduel-api",
    "DEPRECATED-pm2:start-test": "pm2 start ecosystem.config.cjs --only degenduel-api-test", 
    "DEPRECATED-pm2:stop": "pm2 stop degenduel-api",
    "DEPRECATED-pm2:stop-test": "pm2 stop degenduel-api-test",
    "DEPRECATED-pm2:restart": "pm2 restart degenduel-api --update-env",
    "DEPRECATED-pm2:restart-test": "pm2 restart degenduel-api-test --env-file=ecosystem.config.cjs --update-env",
    "DEPRECATED-pm2:restart-logs": "pm2 restart degenduel-api --update-env && pm2 logs degenduel-api --lines 100",
    "DEPRECATED-pm2:restart-logs:test": "pm2 restart degenduel-api-test --update-env && pm2 logs degenduel-api-test --lines 100",
    "DEPRECATED-test:api": "./tests/api-test.sh",
    "DEPRECATED-rebuild": "node scripts/rebuild.js",
    "DEPRECATED-hard-restart": "node scripts/hard-restart.js",
    "DEPRECATED-restart": "node scripts/restart.js",
    "DEPRECATED-status": "pm2 status",
    "DEPRECATED-backup-db": "./scripts/backup-db.sh",
    "DEPRECATED-backup": "./scripts/backup-db.sh"
  },
  "dependencies": {
    "@faker-js/faker": "^9.4.0",
    "@logtail/node": "^0.5.2",
    "@logtail/winston": "^0.5.2",
    "@metaplex-foundation/mpl-token-metadata": "^3.4.0",
    "@metaplex-foundation/umi": "^1.0.0",
    "@metaplex-foundation/umi-bundle-defaults": "^1.0.0",
    "@prisma/client": "^6.3.1",
    "@radix-ui/react-progress": "^1.1.2",
    "@radix-ui/react-tabs": "^1.1.3",
    "@solana/kit": "^2.1.0",
    "@solana/spl-token": "^0.4.12",
    "@solana/transaction-messages": "^2.1.0",
    "@solana/transactions": "^2.1.0",
    "@solana/functional": "^2.1.0",
    "@solana/web3.js": "^1.98.0",
    "@virtuals-protocol/game": "^0.1.9",
    "axios": "^1.7.9",
    "connect-redis": "^7.1.1",
    "boxen": "^8.0.1",
    "bs58": "^6.0.0",
    "chalk": "^5.4.1",
    "class-variance-authority": "^0.7.1",
    "cli-progress": "^3.12.0",
    "clsx": "^2.1.1",
    "colors": "^1.4.0",
    "cookie-parser": "^1.4.7",
    "cors": "^2.8.5",
    "cron": "^3.5.0",
    "date-fns": "^3.3.1",
    "decimal.js": "^10.5.0",
    "dotenv": "^16.4.7",
    "express": "^4.18.3",
    "express-rate-limit": "^7.5.0",
    "express-session": "^1.18.1",
    "express-validator": "^7.0.1",
    "figlet": "^1.8.0",
    "gradient-string": "^3.0.0",
    "helmet": "^7.1.0",
    "ioredis": "^5.5.0",
    "jsonwebtoken": "^9.0.2",
    "multer": "^1.4.5-lts.1",
    "node-fetch": "^3.3.2",
    "openai": "^4.80.0",
    "ora": "^8.1.1",
    "pg": "^8.13.1",
    "pm2": "^5.3.1",
    "solana-agent-kit": "^1.4.8",
    "sqlite3": "^5.1.7",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.1",
    "tailwind-merge": "^3.0.2",
    "tweetnacl": "^1.0.3",
    "twilio": "^5.4.4",
    "winston": "^3.12.0",
    "winston-daily-rotate-file": "^5.0.0",
    "ws": "^8.18.0",
    "yargs": "^17.7.2",
    "zod": "^3.24.1"
  },
  "devDependencies": {
    "@types/jest": "^29.5.14",
    "@types/jsonwebtoken": "^9.0.7",
    "@types/node": "^22.13.1",
    "@types/pg": "^8.11.10",
    "eslint": "^8.56.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.2.1",
    "prettier": "^3.4.2",
    "prisma": "^6.3.1",
    "ts-node": "^10.9.2",
    "typescript": "^5.7.3"
  },
  "prisma": {
    "seed": "node prisma/seed.js"
  }
}
